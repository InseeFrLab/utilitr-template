% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilitr_presentation.R
\name{utilitr_presentation}
\alias{utilitr_presentation}
\title{A xaringan template for presentations}
\usage{
utilitr_presentation(
  css = NULL,
  nature = list(highlightStyle = "github", highlightLines = TRUE,
    countIncrementalSlides = TRUE),
  self_contained = TRUE,
  lib_dir = "libs",
  ...
)
}
\arguments{
\item{css}{A vector of CSS file paths. Two default CSS files
(\file{default.css} and \file{default-fonts.css}) are provided in this
package, which was borrowed from \url{https://remarkjs.com}. If the
character vector \code{css} contains a value that does not end with
\code{.css}, it is supposed to be a built-in CSS file in this package,
e.g., for \code{css = c('default', 'extra.css')}), it means
\code{default.css} in this package and a user-provided \code{extra.css}. To
find out all built-in CSS files, use \code{xaringan:::list_css()}.}

\item{nature}{(Nature transformation) A list of configurations to be passed
to \code{remark.create()}, e.g. \code{list(ratio = '16:9', navigation =
list(click = TRUE))}; see
\url{https://github.com/gnab/remark/wiki/Configuration}. Besides the
options provided by remark.js, you can also set \code{autoplay} to a number
(the number of milliseconds) so the slides will be played every
\code{autoplay} milliseconds; alternatively, \code{autoplay} can be a list
of the form \code{list(interval = N, loop = TRUE)}, so the slides will go
to the next page every \code{N} milliseconds, and optionally go back to the
first page to restart the play when \code{loop = TRUE}. You can also set
\code{countdown} to a number (the number of milliseconds) to include a
countdown timer on each slide. If using \code{autoplay}, you can optionally
set \code{countdown} to \code{TRUE} to include a countdown equal to
\code{autoplay}. To alter the set of classes applied to the title slide,
you can optionally set \code{titleSlideClass} to a vector of classes; the
default is \code{c("center", "middle", "inverse")}.}

\item{self_contained}{Whether to produce a self-contained HTML file by
embedding all external resources into the HTML file. See the \sQuote{Note}
section below.}

\item{lib_dir}{JS dependencies librairies location}

\item{...}{For \code{tsukuyomi()}, arguments passed to
\code{moon_reader()}; for \code{moon_reader()}, arguments passed to
\code{rmarkdown::\link{html_document}()}.}
}
\description{
An opinionated template
}
