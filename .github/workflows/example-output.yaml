name: Example output

on: push

jobs:
  bookdown-prod:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    container: inseefrlab/utilitr:latest
    steps:
      - name: Checkout Repository
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        uses: actions/checkout@master
      - name: Install Dependencies
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          Rscript -e "install.packages('xfun')"
          Rscript -e "install.packages(c('remotes'))"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
      - name: Install package
        run: |
          Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"
          Rscript -e "devtools::install()"
      - name: Render Book
        run: |
          Rscript -e "rmarkdown::draft('index.Rmd', template='utilitr', package='utilitr', edit = FALSE)"
          Rscript -e "bookdown::render_book('index.Rmd', output_dir = '_public', output_format = 'utilitr::bs4_utilitr')"
      - uses: actions/upload-artifact@v2
        with:
          name: _public
          path: _public/
          retention-days: 5
  pagedown:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    container: inseefrlab/utilitr:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Install Dependencies
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          Rscript -e "install.packages(c('remotes'))"
          Rscript -e "remotes::install_github('rstudio/pagedown')"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
      - name: Install package
        run: |
          Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"
          Rscript -e "devtools::install()"
      - name: Render Book
        run: |
          Rscript -e "rmarkdown::draft('index.Rmd', template='utilitr', package='utilitr', edit = FALSE)"
          mkdir _pagedown_output -p
          Rscript -e "utilitr::pdf_document()"
      - uses: actions/upload-artifact@v2
        with:
          name: example_pdf
          path: _pagedown_output/DocumentationR.pdf
          retention-days: 5
  HTMLpaged:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    container: inseefrlab/utilitr:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Install Dependencies
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          Rscript -e "install.packages(c('remotes'))"
          Rscript -e "remotes::install_github('rstudio/pagedown')"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
      - name: Install package
        run: |
          Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"
          Rscript -e "devtools::install()"
      - name: Render Book
        run: |
          Rscript -e "rmarkdown::draft('index.Rmd', template='utilitr', package='utilitr', edit = FALSE)"
          mkdir _pagedown_output -p
          Rscript -e "utilitr::pdf_document(asHTML = TRUE)"
      - uses: actions/upload-artifact@v2
        with:
          name: example_pagedHTML
          path: _pagedown_output/
          retention-days: 5
  netlify-prod:
    if: "!contains(github.event.commits[0].message, '[skip ci]') && (github.ref == 'refs/heads/master')"
    needs: bookdown-prod
    runs-on: ubuntu-latest
    container: inseefrlab/utilitr:latest
    steps:
      - name: Checkout Repository
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        uses: actions/checkout@master
      - name: Install Dependencies
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          Rscript -e "install.packages(c('remotes'))"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
      - name: Install package
        run: |
          Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"
          Rscript -e "devtools::install()"
      - name: Render Book
        run: |
          Rscript -e "rmarkdown::draft('index.Rmd', template='utilitr', package='utilitr', edit = FALSE)"
          Rscript -e "bookdown::render_book('index.Rmd', output_dir = '_public', output_format = 'utilitr::bs4_utilitr')"
      - name: Install npm
        uses: actions/setup-node@v1
      - name: Deploy to Netlify
        # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm install --unsafe-perm=true netlify-cli -g
          netlify init
          netlify deploy --prod --dir="_public" --message "Deploy master"
  netlify-dev:
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !(github.ref == 'refs/heads/master')"
    needs: bookdown-prod
    runs-on: ubuntu-latest
    container: inseefrlab/utilitr:latest
    steps:
      - name: Checkout Repository
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        uses: actions/checkout@master
      - name: Install Dependencies
        env:
          GITHUB_PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          Rscript -e "install.packages(c('remotes'))"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
      - name: Install package
        run: |
          Rscript -e "devtools::document(roclets = c('rd', 'collate', 'namespace'))"
          Rscript -e "devtools::install()"
      - name: Render Book
        run: |
          Rscript -e "rmarkdown::draft('index.Rmd', template='utilitr', package='utilitr', edit = FALSE)"
          Rscript -e "bookdown::render_book('index.Rmd', output_dir = '_public', output_format = 'utilitr::bs4_utilitr')"
      - name: Install npm
        uses: actions/setup-node@v1
      - name: Deploy to Netlify
        # NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          # BRANCHE_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          npm install --unsafe-perm=true netlify-cli -g
          netlify init
          netlify deploy --alias=${BRANCHE_REF} --dir="_public" --message "Preview deploy from ${BRANCHE_REF}"
